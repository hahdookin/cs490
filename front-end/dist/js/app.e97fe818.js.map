{"version":3,"file":"js/app.e97fe818.js","mappings":"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","sources":["webpack://test/./src/App.vue","webpack://test/./src/components/Header.vue","webpack://test/./src/components/Login.vue","webpack://test/./src/components/Login.vue?38a9","webpack://test/./src/components/Header.vue?801b","webpack://test/./src/components/Footer.vue","webpack://test/./src/components/Footer.vue?7cca","webpack://test/./src/App.vue?7ccd","webpack://test/./src/views/Home.vue","webpack://test/./src/views/Home.vue?9051","webpack://test/./src/views/NotFound.vue","webpack://test/./src/views/NotFound.vue?0aab","webpack://test/./src/views/TeacherDashboard.vue","webpack://test/./src/views/TeacherDashboard.vue?2711","webpack://test/./src/views/StudentDashboard.vue","webpack://test/./src/views/StudentDashboard.vue?6c4d","webpack://test/./src/views/Exam.vue","webpack://test/./src/views/Exam.vue?3473","webpack://test/./src/views/ExamList.vue","webpack://test/./src/views/ExamList.vue?0959","webpack://test/./src/views/AssignExam.vue","webpack://test/./src/views/AssignExam.vue?a9d3","webpack://test/./src/views/ExamCreator.vue","webpack://test/./src/views/ExamCreator.vue?9db4","webpack://test/./src/views/QuestionCreator.vue","webpack://test/./src/views/QuestionCreator.vue?e9f6","webpack://test/./src/views/ViewExam.vue","webpack://test/./src/views/ViewExam.vue?c1c1","webpack://test/./src/views/ReviewExam.vue","webpack://test/./src/views/ReviewExam.vue?a666","webpack://test/./src/views/ViewGraded.vue","webpack://test/./src/views/ViewGraded.vue?18ed","webpack://test/./src/router/index.js","webpack://test/./src/database.js","webpack://test/./src/main.js","webpack://test/webpack/bootstrap","webpack://test/webpack/runtime/chunk loaded","webpack://test/webpack/runtime/compat get default export","webpack://test/webpack/runtime/define property getters","webpack://test/webpack/runtime/global","webpack://test/webpack/runtime/hasOwnProperty shorthand","webpack://test/webpack/runtime/jsonp chunk loading","webpack://test/webpack/startup"],"sourcesContent":["<template>\n    <Header :userInfo=\"userInfo\" \n            @user-logged-in=\"handleUserLogin\" \n            @user-logged-out=\"handleUserLogout\"\n            title=\"Exam Central\"/>\n\n    <div v-if=\"userIsLoggedIn\">\n        <router-view></router-view>\n        <Footer :userInfo=\"userInfo\" />\n    </div>\n    <button @click=\"testMe\">Send me!</button>\n</template>\n\n<script>\nimport Header from \"./components/Header\";\nimport Footer from \"./components/Footer\";\n\nexport default {\n    name: 'App',\n    components: {\n        Header,\n        Footer,\n    },\n    inject: ['serialize'],\n    data() { \n        return {\n            userInfo: {\n                username: '',\n                type: '',\n                userid: -1,\n            },\n            examActive: false\n        }; \n    },\n    computed: {\n        userIsLoggedIn() {\n            return this.userInfo.username !== '';\n        },\n        userIsTeacher() {\n            return this.userInfo.type.toLowerCase() === 'teacher';\n        },\n        userIsStudent() {\n            return this.userInfo.type.toLowerCase() === 'student';\n        }\n    },\n    methods: {\n        handleUserLogin(info) {\n            this.userInfo = info;\n            this.$router.push(`/${this.userInfo.type}/${this.userInfo.userid}`);\n        },\n        handleUserLogout() {\n            this.userInfo.username = '';\n            this.userInfo.type = '';\n            this.userInfo.userid = -1;\n            this.$router.push('/');\n        },\n        async testMe() {\n            const res = await fetch('http://ec2-3-136-155-192.us-east-2.compute.amazonaws.com/cringe', {\n                method: 'post',\n                headers: {\n                    'Content-Type': 'application/x-www-form-urlencoded'\n                },\n                body: this.serialize({\n                    qid: 22,\n                    code: \"def function():\\n\\thelsdfsdf\"\n                })\n            });\n            const resp = await res.text();\n            console.log(\"RESP\", resp);\n        }\n    },\n    created() {},\n}\n</script>\n\n<style>\n#app {\n  font-family: Avenir, Helvetica, Arial, sans-serif;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  text-align: center;\n  color: #2c3e50;\n  margin-top: 60px;\n}\n</style>\n","<template>\n    <header>\n        <h1 @click=\"$router.push('/')\">{{ title }}</h1>\n        <Login :userInfo=\"userInfo\" \n               @user-logged-in=\"onUserLogin\"\n               @user-logged-out=\"onUserLogout\"/>\n    </header>\n    <hr>\n</template>\n\n<script>\nimport Login from \"../components/Login.vue\";\n\nexport default {\n    name: 'Header',\n    emits: ['user-logged-in', 'user-logged-out'],\n    components: {\n        Login\n    },\n    props: {\n        title: String,\n        userInfo: Object\n    },\n    methods: {\n        onUserLogin(info) {\n            this.$emit('user-logged-in', info);\n        },\n        onUserLogout() {\n            this.$emit('user-logged-out');\n        }\n    }\n}\n</script>\n\n<style scoped>\nfooter {\n    display: flex;\n    justify-content: space-around;\n    align-items: center;\n}\n</style>\n","<template>\n    <div v-if=\"userInfo.username === ''\">\n        <form @submit=\"onSubmit\" method=\"post\">\n            Username: <input v-model=\"username\" type=\"text\" name=\"username\" required><br>\n            Password: <input v-model=\"password\" type=\"password\" name=\"password\" required><br>\n            <input type=\"submit\" value=\"Login\">\n            <p style=\"color:red\">{{ errorMessage }}</p>\n        </form>\n    </div>\n    <div v-else>\n        <h3>Welcome {{ userInfo.username }}, {{ userInfo.type }}</h3>\n        <button @click=\"onLogout\">Logout</button>\n    </div>\n</template>\n\n<script>\nexport default {\n    name: 'Login',\n    inject: ['fetchLoginCredentials'],\n    components: {},\n    props: {\n        userInfo: Object,\n    },\n    emits: ['user-logged-in', 'user-logged-out'],\n    data() {\n        return {\n            username: '',\n            password: '',\n            errorMessage: '',\n        }\n    },\n    methods: {\n        async onSubmit(e) {\n            e.preventDefault();\n            // Post username and password to database\n            let credientials;\n            try {\n                credientials = await this.fetchLoginCredentials(this.username, this.password);\n            } catch (error) {\n                this.errorMessage = 'Network error, try again later';\n                return;\n            }\n\n            // On bad credientials\n            if (!credientials) {\n                this.errorMessage = 'Incorrect username or password';\n                return;\n            }\n            // Successful, clear error msg and emit up to app\n            this.errorMessage = '';\n            this.$emit('user-logged-in', {\n                username: this.username,\n                type: credientials.type,\n                userid: credientials.id,\n            });\n        },\n        onLogout() {\n            this.$emit('user-logged-out');\n        }\n    }\n}\n</script>\n","import { render } from \"./Login.vue?vue&type=template&id=a05ba87e\"\nimport script from \"./Login.vue?vue&type=script&lang=js\"\nexport * from \"./Login.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"/home/chris/tests/cs490/front-end/node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","import { render } from \"./Header.vue?vue&type=template&id=45df1521&scoped=true\"\nimport script from \"./Header.vue?vue&type=script&lang=js\"\nexport * from \"./Header.vue?vue&type=script&lang=js\"\n\nimport \"./Header.vue?vue&type=style&index=0&id=45df1521&scoped=true&lang=css\"\n\nimport exportComponent from \"/home/chris/tests/cs490/front-end/node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-45df1521\"]])\n\nexport default __exports__","<template>\n    <hr>\n    <footer>\n        <div v-if=\"userIsLoggedIn\">\n            <h3>Navigate</h3>\n            <router-link :to=\"userDashboard\">Dashboard</router-link><br>\n        </div>\n    </footer>\n</template>\n\n<script>\nexport default {\n    name: 'Footer',\n    components: {},\n    props: {\n        userInfo: Object,\n    },\n    computed: {\n        userIsLoggedIn() {\n            return this.userInfo.username !== '';\n        },\n        userIsTeacher() {\n            return this.userInfo.type.toLowerCase() === 'teacher';\n        },\n        userIsStudent() {\n            return this.userInfo.type.toLowerCase() === 'student';\n        },\n        userDashboard() {\n            const { userid, type } = this.userInfo;\n            return '/' + type + '/' + userid;\n        }\n    }\n}\n</script>\n\n<style scoped>\nfooter {\n    /* margin-top: 30px; */\n    margin-bottom: 30px;\n    text-align: center;\n}\n</style>\n","import { render } from \"./Footer.vue?vue&type=template&id=0d3ba8b9&scoped=true\"\nimport script from \"./Footer.vue?vue&type=script&lang=js\"\nexport * from \"./Footer.vue?vue&type=script&lang=js\"\n\nimport \"./Footer.vue?vue&type=style&index=0&id=0d3ba8b9&scoped=true&lang=css\"\n\nimport exportComponent from \"/home/chris/tests/cs490/front-end/node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-0d3ba8b9\"]])\n\nexport default __exports__","import { render } from \"./App.vue?vue&type=template&id=6da67c56\"\nimport script from \"./App.vue?vue&type=script&lang=js\"\nexport * from \"./App.vue?vue&type=script&lang=js\"\n\nimport \"./App.vue?vue&type=style&index=0&id=6da67c56&lang=css\"\n\nimport exportComponent from \"/home/chris/tests/cs490/front-end/node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<template>\n<h3>HOME</h3>\n</template>\n","import { render } from \"./Home.vue?vue&type=template&id=844d0dec\"\nconst script = {}\n\nimport exportComponent from \"/home/chris/tests/cs490/front-end/node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<template>\n    <h2>404 Not Found</h2>\n</template>\n","import { render } from \"./NotFound.vue?vue&type=template&id=9c9b4c54\"\nconst script = {}\n\nimport exportComponent from \"/home/chris/tests/cs490/front-end/node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<template>\n    <h1>Teacher Dashboard</h1>\n    <ul>\n        <li><router-link :to=\"{ path: examCreatorPath }\">Exam Creator</router-link></li>\n        <li><router-link :to=\"{ path: questionCreatorPath }\">Question Creator</router-link></li>\n        <li><router-link :to=\"{ path: assignExamPath }\">Assign Exam</router-link></li>\n        <li><router-link :to=\"{ path: viewExamsPath }\">View Exams</router-link></li>\n    </ul>\n    <router-view></router-view>\n</template>\n\n<script>\nexport default {\n    name: 'TeacherDashboard',\n    data() {\n        return {\n            userid: this.$route.params.userid\n        };\n    },\n    computed: {\n        examCreatorPath() {\n            return `/teacher/${this.userid}/examcreator`;\n        },\n        questionCreatorPath() {\n            return `/teacher/${this.userid}/questioncreator`;\n        },\n        assignExamPath() {\n            return `/teacher/${this.userid}/assignexam`;\n        },\n        viewExamsPath() {\n            return `/teacher/${this.userid}/viewexams`;\n        },\n    },\n}\n</script>\n","import { render } from \"./TeacherDashboard.vue?vue&type=template&id=3dd5da3a\"\nimport script from \"./TeacherDashboard.vue?vue&type=script&lang=js\"\nexport * from \"./TeacherDashboard.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"/home/chris/tests/cs490/front-end/node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<template>\n    <h1>Student Dashboard</h1>\n    <ul>\n    <li><router-link :to=\"{ path: `/student/${$route.params.userid}/examlist` }\">View Exams</router-link></li>\n    </ul>\n    <router-view></router-view>\n</template>\n\n<style scoped>\nbody {\n    margin: 0;\n}\n</style>\n","import { render } from \"./StudentDashboard.vue?vue&type=template&id=687431ac&scoped=true\"\nconst script = {}\n\nimport \"./StudentDashboard.vue?vue&type=style&index=0&id=687431ac&scoped=true&lang=css\"\n\nimport exportComponent from \"/home/chris/tests/cs490/front-end/node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-687431ac\"]])\n\nexport default __exports__","<template>\n    <h1>{{ exam.name }} (ID: {{ examID }}) Total Points: {{ totalExamPoints(exam) }}</h1>\n\n    <div :key=\"question.id\" v-for=\"(question, i) in questions\">\n\n        <!-- Question info --> \n        <h3>{{ i + 1 }}) {{ question.title }}</h3> \n        <h5>Points: {{ question.points }}</h5>\n        <p>{{ question.desc }}</p>\n        <p>Examples:</p>\n        <div>\n            <p v-for=\"test in question.tests\">\n            <code>\n            {{question.functionname}}({{test.arguments.join(',')}}) -&gt; {{test.output}}\n            </code>\n            </p>\n        </div>\n\n        <!-- Student answer section -->\n        <textarea \n            @keydown=\"onKeydown($event)\"\n            v-model=\"question.code\"\n            rows=\"20\"\n            cols=\"60\"\n            autocapitalize=\"off\" \n            spellcheck=\"false\" \n            contenteditable=\"true\">{{ question.code }}</textarea>\n    </div>\n\n    <button @click=\"onSubmit\">Submit Exam</button>\n\n</template>\n\n<script>\nexport default {\n    name: 'Exam',\n    inject: [\n        'zip',\n        'split',\n        'fetchExam', \n        'fetchQuestionsFromExam', \n        'fetchQuestion',\n        'fetchStudentExams',\n        'postStudentExamResult',\n        'postStudentExamAnswer',\n        'updateStudentExams',\n    ],\n    components: {},\n    /* emits: ['student-exam-active'], */\n    data() {\n        return {\n            examID: +this.$route.params.examid,\n            questions: [],\n            exam: {}\n        };\n    },\n    methods: {\n        examFunctionSignature(question) {\n            let res = 'def ';\n            res += question.functionname;\n            res += `(${question.parameters.join(',')}):`;\n            res += '\\n\\t';\n            return res;\n        },\n        async onSubmit() {\n            const studentUserID = +this.$route.params.userid;\n\n            // Post studentexamresult and grab the ID\n            const payload = {\n                examid: this.examID,\n                userid: studentUserID,\n                autograded: false,\n                reviewed: false,\n                points: this.totalExamPoints(this.exam),\n            };\n            const res = await this.postStudentExamResult(payload);\n            const studentexamresult = await res.json();\n\n            // Post studentexamanswers\n            for (const question of this.questions) {\n                const testsPayload = [];\n                const testsCount = question.tests.length;\n                const points = question.points;\n                // Subtract 1 point for the correct fname\n                const pointDist = this.split(points - (points === 0 ? 0 : 1), testsCount);\n                for (const [test, p] of this.zip(question.tests, pointDist)) {\n                    // TODO: pass will be handled by querying autograder,\n                    // for now just put random pass or fail\n                    testsPayload.push({\n                        pass: false,\n                        points: p || 0,\n                        studentoutput: ''\n                    });\n                }\n                const payload = {\n                    questionid: question.id,\n                    studentexamresultid: studentexamresult.id,\n                    runs: false,\n                    namecorrect: false,\n                    namecorrectpoints: 0,\n                    code: question.code,\n                    tests: testsPayload,\n                    comment: '',\n                };\n                const res = await this.postStudentExamAnswer(payload);\n            }\n\n            // Move examID from incompleted to completed\n            const studentExams = await this.fetchStudentExams(studentUserID);\n            const i = studentExams.incompleted.indexOf(this.examID);\n            studentExams.incompleted.splice(i, 1);\n            studentExams.completed.push(this.examID);\n            const res2 = await this.updateStudentExams(studentExams);\n\n            // Redirect to student dashboard\n            this.$router.push(`/student/${studentUserID}`);\n        },\n        totalExamPoints(exam) {\n            if (!exam.questions) return 0;\n            let total = 0;\n            for (const question of exam.questions) \n                total += question.points;\n            return total;\n        },\n        onKeydown(e) {\n            if (e.key == 'Tab') {\n                const tar = e.target;\n                e.preventDefault();\n                var start = tar.selectionStart;\n                var end = tar.selectionEnd;\n\n                // set textarea value to: text before caret + tab + text after caret\n                tar.value = tar.value.substring(0, start) +\n                \"\\t\" + tar.value.substring(end);\n\n                // put caret at right position again\n                tar.selectionStart = tar.selectionEnd = start + 1;\n            }\n        }\n    },\n    async created() {\n        this.questions = await this.fetchQuestionsFromExam(this.examID);\n        this.questions.forEach(q => {\n            // Have each questions answer box start with the function signature\n            q.code = this.examFunctionSignature(q);\n        });\n        this.exam = await this.fetchExam(this.examID);\n    }\n}\n</script>\n","import { render } from \"./Exam.vue?vue&type=template&id=42765ef4\"\nimport script from \"./Exam.vue?vue&type=script&lang=js\"\nexport * from \"./Exam.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"/home/chris/tests/cs490/front-end/node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<template>\n    <h3>Exams:</h3>\n    <div v-if=\"noexams\">\n        <p>No exams to show!</p>\n    </div>\n    <!-- Two column display of exams -->\n    <div v-else class=\"columns-container\">\n\n        <!-- Completed exams -->\n        <div class=\"exams-container\">\n            <div>\n                <h3 class=\"column-title\">COMPLETED</h3>\n            </div>\n            <div v-for=\"exam in completedExams\" class=\"exam-item\">\n                <div v-if=\"exam.reviewed\">\n                    <p><router-link :to=\"{ path: `/student/${$route.params.userid}/viewgraded/${exam.studentexamresultid}` }\">{{ exam.name }}</router-link></p>\n                    <p>View Exam</p>\n                </div>\n                <div v-else>\n                    <p>{{ exam.name }}</p>\n                    <p>Not yet graded</p>\n                </div>\n            </div>\n        </div>\n\n        <!-- Incompleted exams -->\n        <div class=\"exams-container\">\n            <div>\n                <h3 class=\"column-title\">INCOMPLETED</h3>\n            </div>\n            <div v-for=\"exam in incompletedExams\" class=\"exam-item\">\n                <p><router-link @click=\"emitExamStarted\" :to=\"{ path: `/student/${$route.params.userid}/exam/${exam.id}`}\">{{ exam.name }}</router-link></p>\n            </div>\n        </div>\n        \n    </div>\n\n</template>\n\n<script>\nexport default {\n    name: 'ExamList',\n    inject: [\n        'fetchExam', \n        'fetchStudentExams',\n        'fetchStudentExamResult'\n    ],\n    emits: ['student-exam-active'],\n    data() {\n        return {\n            student: {\n                username: '',\n            },\n            studentExams: {\n                incompleted: [],\n                completed: []\n            },\n            noexams: false,\n        };\n    },\n    methods: {\n        // TODO: Emit up that the exam started, hide footer and header.\n        emitExamStarted() {\n            this.$emit('student-exam-active');\n        },\n    },\n    computed: {\n        completedExams() {\n            return this.studentExams.completed;\n        },\n        incompletedExams() {\n            return this.studentExams.incompleted;\n        }\n    },\n    async created() {\n        const studentUserID = this.$route.params.userid;\n\n        // Fetch student information\n        const studentExams = await this.fetchStudentExams(studentUserID);\n        if (!studentExams || Object.keys(studentExams).length === 0) {\n            this.noexams = true;\n            return;\n        }\n        this.studentExams = studentExams;\n\n        // Remember the exam IDs\n        const completed = studentExams.completed;\n        const incompleted = studentExams.incompleted;\n\n        // Fetch extra exam info like name\n        const completedInfo = [];\n        const incompletedInfo = [];\n        for (const id of completed) {\n            const examInfo = await this.fetchExam(id);\n            // Fetch if exam has been reviewed and autograded\n            const studentExamResult = await this.fetchStudentExamResult(studentUserID, id);\n            examInfo.studentexamresultid = studentExamResult.id;\n            examInfo.reviewed = studentExamResult.reviewed;\n            completedInfo.push(examInfo);\n        }\n        for (const id of incompleted) {\n            const examInfo = await this.fetchExam(id);\n            incompletedInfo.push(examInfo);\n        }\n        this.studentExams.completed = completedInfo;\n        this.studentExams.incompleted = incompletedInfo;\n    }\n}\n</script>\n\n<style scoped>\n    \nbody {\n    margin: 0;\n}\n.column-title {\n    color: white;\n}\n\n.exams-container {\n    background-color: #344;\n    padding: 1rem;\n    margin-top: 1rem;\n    flex: 1;\n}\n\n.exam-item {\n    padding: 1rem;\n    background-color: white;\n    border: 1px solid blue;\n}\n\n.columns-container {\n    display: flex;\n    justify-content: safe center;\n    width: 75%;\n    margin: 0 auto;\n    max-width: 800px;\n}\n</style>\n","import { render } from \"./ExamList.vue?vue&type=template&id=77a4fd4a&scoped=true\"\nimport script from \"./ExamList.vue?vue&type=script&lang=js\"\nexport * from \"./ExamList.vue?vue&type=script&lang=js\"\n\nimport \"./ExamList.vue?vue&type=style&index=0&id=77a4fd4a&scoped=true&lang=css\"\n\nimport exportComponent from \"/home/chris/tests/cs490/front-end/node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-77a4fd4a\"]])\n\nexport default __exports__","<template>\n    <h3>Assign Exams</h3>\n    <form @submit.prevent=\"onSubmit\">\n        <label>User: </label>\n        <input v-model=\"username\" type=\"text\" required>\n        <div>\n            <select v-model=\"examID\" name=\"exam\">\n                <option value=\"\">--Select an exam--</option>\n                <option v-for=\"exam in exams\" :key=\"exam.id\" :value=\"exam.id\">\n                {{ exam.name }}\n                </option>\n            </select>\n        </div>\n        <input type=\"submit\" value=\"Assign Exam\">\n    </form>\n    <p :style=\"{ color: success ? 'green' : 'red' }\">{{ errorMessage }}</p>\n    {{ username }} {{ examID }}\n</template>\n\n<script>\nexport default {\n    name: 'AssignExam',\n    inject: [\n        'fetchUserID', \n        'fetchExams', \n        'fetchStudentExams',\n        'postTeacherExam',\n        'updateStudentExams'\n    ],\n    data() {\n        return {\n            errorMessage: '',\n            success: false,\n            exams: [],\n            // Assign exam with examID to username\n            username: '',\n            examID: '',\n        };\n    },\n    methods: {\n        setError(msg) {\n            this.success = false;\n            this.errorMessage = msg;\n        },\n        setSuccess(msg) {\n            this.success = true;\n            this.errorMessage = msg;\n        },\n        async onSubmit() {\n            if (this.examID === '') {\n                this.setError('Please select an exam');\n                return;\n            }\n\n            // Check if username is a student\n            // ... TODO\n\n            const teacherUserID = this.$route.params.userid;\n            const studentUserID = await this.fetchUserID(this.username);\n\n            // Post to teacherexams\n            const payload = {\n                assignerid: +teacherUserID,\n                assigneeid: +studentUserID,\n                examid: this.examID\n            };\n            const res = this.postTeacherExam(payload);\n\n            // Add to students incompleted exams\n            const studentExams = await this.fetchStudentExams(studentUserID);\n            studentExams.incompleted.push(this.examID);\n\n            // Update in the database\n            const res2 = await this.updateStudentExams(studentExams);\n\n            // Get exam name\n            const name = this.exams.find(e => e.id === this.examID)?.name;\n            // Assign examID to username\n            this.setSuccess(`Successfully assigned '${name}' to ${this.username}`);\n            this.username = '';\n            this.examID = '';\n        }\n    },\n    async created() {\n        this.exams = await this.fetchExams();\n    }\n}\n</script>\n","import { render } from \"./AssignExam.vue?vue&type=template&id=0d7f8c40\"\nimport script from \"./AssignExam.vue?vue&type=script&lang=js\"\nexport * from \"./AssignExam.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"/home/chris/tests/cs490/front-end/node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<template>\n    <h3>Exam Creator</h3>\n    <label>Exam Name: </label>\n    <input v-model=\"examName\" type=\"text\">\n\n    <p>Total Points: {{ totalPoints }}</p>\n\n    <!-- Here is where the drag-and-drop exam creation happens -->\n    <div class=\"exam-creator-container\">\n\n        <!-- Questions to be added to exam column -->\n        <div @drop=\"onDrop($event, 2)\" \n             @dragover.prevent\n             @dragenter.prevent\n             class=\"questions-container\">\n\n             <div>\n             <h3 class=\"column-title\">EXAM</h3>\n             </div>\n\n            <div :key=\"question.id\" \n                 v-for=\"question in examList\"\n                 draggable=\"true\"\n                 class=\"question-item\" \n                 :id=\"'question' + question.id\"\n                 @dragstart=\"dragStart($event, question)\">\n                <h3>{{ question.title }}({{question.id}})</h3>\n                <h5 :style=\"{ color: difficultyColor(question.difficulty) }\">{{ question.difficulty }}</h5>\n                <p>{{ question.desc }}</p>\n                <p v-for=\"test in question.tests\">\n                    <code>\n                    {{ question.functionname }}\n                    ({{ test.arguments.join(\", \") }}) -&gt; {{ test.output }}\n                    </code>\n                </p>\n                <label>Points: </label>\n                <!-- TODO: Handle invalid numeric input -->\n                <input v-model=\"question.points\" type=\"number\" min=\"0\">\n            </div>\n\n         </div>\n    \n        <!-- Question bank column -->\n        <div @drop=\"onDrop($event, 1)\" \n             @dragover.prevent\n             @dragenter.prevent\n             class=\"questions-container\">\n\n             <div>\n             <h3 class=\"column-title\">BANK</h3>\n             </div>\n\n            <div :key=\"question.id\" \n                 v-for=\"question in bankList\" \n                 draggable=\"true\"\n                 class=\"question-item\" \n                 :id=\"'question' + question.id\"\n                 @dragstart=\"dragStart($event, question)\">\n                <h3>{{ question.title }}({{question.id}})</h3>\n                <h5 :style=\"{ color: difficultyColor(question.difficulty) }\">{{ question.difficulty }}</h5>\n                <p>{{ question.desc }}</p>\n                <p v-for=\"test of question.tests\">\n                    <code>\n                    {{ question.functionname }}\n                    ({{ test.arguments.join(\", \") }}) -&gt; {{ test.output }}\n                    </code>\n                </p>\n            </div>\n\n        </div>\n\n    </div>\n\n    <!-- Submit button -->\n    <button @click=\"onSubmit\">Create Exam</button>\n    <p :style=\"{ color: success ? 'green' : 'red' }\">{{ errorMessage }}</p>\n</template>\n\n<script>\nconst bankColumn = 1;\nconst examColumn = 2;\n\nexport default {\n    name: 'ExamCreator',\n    inject: ['fetchQuestions', 'postExam'],\n    components: {},\n    props: {},\n    data() {\n        return {\n            examName: '',\n            questions: [],\n            errorMessage: \"\",\n            success: false\n        };\n    },\n    methods: {\n        dragStart(event, question) {\n            event.dataTransfer.dropEffect = 'move';\n            event.dataTransfer.effectAllowed = 'move';\n            event.dataTransfer.setData('questionID', question.id);\n        },\n        onDrop(event, list) {\n            // Convert data transfers string id to int\n            const questionID = +event.dataTransfer.getData('questionID');\n            const question = this.questions.find(q => q.id === questionID);\n            question.list = list;\n        },\n        setError(msg) {\n            this.success = false;\n            this.errorMessage = msg;\n        },\n        setSuccess(msg) {\n            this.success = true;\n            this.errorMessage = msg;\n        },\n        async onSubmit() {\n            let examQuestions = this.questions.filter(q => q.list === examColumn);\n            examQuestions = examQuestions.map(q => {\n                return {\n                    id: q.id,\n                    points: q.points,\n                };\n            });\n            if (examQuestions.length === 0) {\n                this.setError(\"Please add questions from the questions bank\");\n                return;\n            }\n            this.examName = this.examName.trim();\n            if (this.examName.length === 0) {\n                this.setError(\"Please enter an exam name\");\n                return;\n            }\n\n            // Post newly created exam to DB\n            const payload = {\n                name: this.examName,\n                questions: examQuestions,\n            };\n            const res = await this.postExam(payload);\n\n            // TODO:Check response\n            this.setSuccess(`Successfully created exam: ${this.examName}`);\n            this.examName = '';\n            this.resetPoints();\n            this.moveAllToColumn(bankColumn);\n        },\n        moveAllToColumn(col) {\n            this.questions.forEach(question => {\n                question.list = col;\n            });\n        },\n        resetPoints() {\n            this.questions.forEach(question => {\n                question.points = 0;\n            });\n        },\n        difficultyColor(difficulty) {\n            switch (difficulty) {\n                case 'easy':\n                    return 'green';\n                case 'medium':\n                    return 'orange';\n                case 'hard':\n                    return 'red';\n                default:\n                    return 'black';\n            }\n        }\n    },\n    async created() {\n        this.questions = await this.fetchQuestions();\n        this.resetPoints();\n        // Start each question in the bank column\n        // 1 -> bank\n        // 2 -> exam\n        this.moveAllToColumn(bankColumn);\n    },\n    computed: {\n        bankList() {\n            return this.questions.filter(q => q.list === bankColumn);\n        },\n        examList() {\n            return this.questions.filter(q => q.list === examColumn);\n        },\n        totalPoints() {\n            const points = this.examList.map(q => q.points);\n            if (points.length === 0)\n                return 0;\n            return points.reduce((p, c) => p + c);\n        }\n    }\n}\n</script>\n\n<style scoped>\nbody {\n    margin: 0;\n}\n.column-title {\n    color: white;\n}\n\n.questions-container {\n    background-color: #344;\n    padding: 1rem;\n    margin-top: 1rem;\n    flex: 1;\n}\n\n.question-item {\n    padding: 1rem;\n    background-color: white;\n    cursor: move;\n    border: 1px solid blue;\n}\n\n.exam-creator-container {\n    display: flex;\n    justify-content: safe center;\n    width: 75%;\n    margin: 0 auto;\n    max-width: 800px;\n}\n\n.invisible {\n    display: none;\n}\n</style>\n","import { render } from \"./ExamCreator.vue?vue&type=template&id=63913bac&scoped=true\"\nimport script from \"./ExamCreator.vue?vue&type=script&lang=js\"\nexport * from \"./ExamCreator.vue?vue&type=script&lang=js\"\n\nimport \"./ExamCreator.vue?vue&type=style&index=0&id=63913bac&scoped=true&lang=css\"\n\nimport exportComponent from \"/home/chris/tests/cs490/front-end/node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-63913bac\"]])\n\nexport default __exports__","<template>\n    <h3>Question Creator</h3>\n    <!-- A Question has the following required elements: -->\n    <!-- - Title -> Title of the question -->\n    <!-- - Desc -> A short description of the problem -->\n    <!-- - Difficulty -> The problems difficulty: one of 3 options -->\n    <!-- - Function Name -> Name of the function -->\n    <!-- - Parameters -> Up to X parameters -->\n    <!-- - Examples -> Up to X examples -->\n    <form name=\"questioncreatorform\" \n          id=\"questioncreatorform\" \n          @submit=\"onSubmit\">\n\n        <!-- Title -->\n        <label for=\"title\">Title</label>\n        <input v-model=\"title\"\n               type=\"text\" \n               name=\"title\" \n               required><br>\n\n        <!-- Description -->\n        <label for=\"desc\">Description</label><br>\n        <textarea v-model=\"desc\"\n                  name=\"desc\" \n                  rows=\"3\" \n                  cols=\"50\" \n                  required></textarea><br>\n\n        <!-- Difficulty -->\n        <label for=\"difficulty\">Difficulty</label>\n        <select v-model=\"difficulty\" name=\"difficulty\" required>\n            <option value=\"easy\">Easy</option>\n            <option value=\"medium\">Medium</option>\n            <option value=\"hard\">Hard</option>\n        </select><br>\n\n        <!-- Function Name -->\n        <label for=\"functionname\">Function Name</label>\n        <input pattern=\"[A-Za-z_][A-Za-z0-9_]*\" \n               v-model=\"functionname\" \n               type=\"text\" \n               name=\"functionname\" \n               required><br>\n\n        <label>Parameters: </label>\n        <div>\n            <input :key=\"index\" \n                   pattern=\"[A-Za-z_][A-Za-z0-9_]*\"\n                   v-for=\"(param, index) in parameters\"\n                   v-model=\"parameters[index]\"\n                   type=\"text\" \n                   :placeholder=\"`param${index}`\"\n                   required>\n        </div>\n        <button @click.prevent=\"addParam\">Add Parameter</button>\n        <button @click.prevent=\"removeParam\">Remove Parameter</button>\n        <br>\n\n        <label>Test Cases: </label>\n        <div>\n            <div :key=\"index\"\n                 v-for=\"(test, index) in tests\">\n                <label>Test {{ index }}: </label>\n                <input :key=\"idx\"\n                       v-for=\"(param, idx) in parameters\"\n                       v-model=\"test.arguments[idx]\"\n                       type=\"text\"\n                       :placeholder=\"`arg${idx}`\"\n                       required>\n                <input placeholder=\"output\"\n                       v-model=\"test.output\">\n            </div>\n        </div>\n        <button @click.prevent=\"addTest\">Add Test</button>\n        <button @click.prevent=\"removeTest\">Remove Test</button>\n\n        <!-- DEBUG REMOVE ME -->\n        <div>\n            <p>Params: {{ parameters.toString() }}</p>\n            <p>Tests: </p>\n            <div v-for=\"(test, i) in tests\">\n                <p>({{ test.arguments.toString() }}) -> {{ test.output }}</p>\n            </div>\n        </div>\n\n        <div>\n            <input type=\"submit\" value=\"Create Question\">\n            <input type=\"reset\">\n            <p :style=\"{ color: success ? 'green' : 'red' }\">{{ errorMessage }}</p>\n        </div>\n    </form>\n</template>\n\n<script>\n\nexport default {\n    name: 'QuestionCreator',\n    inject: ['postQuestion'],\n    data() {\n        return {\n            errorMessage: '',\n            success: false,\n            title: '',\n            desc: '',\n            difficulty: 'easy',\n            functionname: '',\n            parameters: [],\n            tests: [],\n        }\n    },\n    methods: {\n        setError(msg) {\n            this.success = false;\n            this.errorMessage = msg;\n        },\n        setSuccess(msg) {\n            this.success = true;\n            this.errorMessage = msg;\n        },\n        async onSubmit(e) {\n            e.preventDefault();\n            if (!this.validateForm())\n                return;\n            console.log(\"Submitting form!\");\n            const payload = {\n                title: this.title,\n                desc: this.desc,\n                difficulty: this.difficulty,\n                functionname: this.functionname,\n                parameters: this.parameters,\n                tests: this.tests\n            };\n\n            // Post question to DATABASE\n            const res = await this.postQuestion(payload);\n\n            this.setSuccess(`Successfully created question: ${this.title}`);\n        },\n        validateForm() {\n            // Validate form (the parts which haven't already been validated)\n            // Check for duplicate parameters\n            const duplicates = this.parameters.filter((p, i) => {\n                return this.parameters.indexOf(p) !== i;\n            });\n            if (duplicates.length !== 0) {\n                this.setError(`Duplicate parameters: ${duplicates.toString()}`);\n                return false;\n            }\n            // Check for no test cases\n            if (this.tests.length < 2) {\n                this.setError('Need at least 2 test cases.');\n                return false;\n            }\n            return true;\n        },\n        addParam() {\n            this.parameters.push('');\n        },\n        removeParam() {\n            this.parameters.pop();\n            // Remove parameter from all tests!\n            this.tests.forEach(test => {\n                test.arguments.pop();\n            });\n        },\n        addTest() {\n            this.tests.push({\n                arguments: [],\n                output: '',\n            });\n        },\n        removeTest() {\n            this.tests.pop();\n        }\n    },\n}\n</script>\n","import { render } from \"./QuestionCreator.vue?vue&type=template&id=0c21aaec\"\nimport script from \"./QuestionCreator.vue?vue&type=script&lang=js\"\nexport * from \"./QuestionCreator.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"/home/chris/tests/cs490/front-end/node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<template>\n    <h3>View Exams</h3>\n    <div v-if=\"noexams\">\n        <p>No exams assigned...</p>\n    </div>\n    <div v-else v-for=\"exam in teacherExams\" class=\"exam-item\">\n        <p>Student: {{ exam.assignee }}</p>\n        <p>Exam: {{ exam.exam?.name }}</p>\n        <div>\n            <p>Status: {{ exam.completed ? 'Completed' : 'Not yet completed' }}</p>\n            <div v-if=\"exam.completed\">\n                <button @click=\"postAutoGrade(exam)\" \n                        :disabled=\"exam.autograded\">AutoGrade</button>\n                <button @click=\"reviewAndSubmitExam(exam.studentExamResult)\"\n                        :disabled=\"!exam.autograded && !exam.reviewed\">Review and Submit</button>\n            </div>\n        </div>\n    </div>\n</template>\n\n<script>\nexport default {\n    name: 'ViewExams',\n    inject: [\n        'postToAutograder',\n        'fetchUser',\n        'fetchTeacherExams', \n        'fetchExam',\n        'fetchStudentExams',\n        'fetchStudentExamResult',\n    ],\n    data() {\n        return {\n            teacherExams: [], // { assigner, assignee, id, examid }\n            noexams: false,\n        };\n    },\n    async created() {\n        const teacherUserID = +this.$route.params.userid;\n\n        // Get all exams the teacher has assigned\n        this.teacherExams = await this.fetchTeacherExams(teacherUserID);\n        if (Object.keys(this.teacherExams).length === 0) {\n            this.noexams = true;\n            return;\n        }\n\n        for (const teacherExam of this.teacherExams) {\n            const studentUserID = +teacherExam.assigneeid;\n            const studentUser = await this.fetchUser(studentUserID);\n            // Store user's username\n            teacherExam.assignee = studentUser.username;\n\n            // Find out if the exam is completed\n            let studentCompleted = await this.fetchStudentExams(teacherExam.assigneeid);\n            studentCompleted = studentCompleted.completed;\n            teacherExam.completed = studentCompleted.indexOf(teacherExam.examid) !== -1;\n\n            // If completed, query the studentExamResult\n            if (teacherExam.completed) {\n                // Find out if the exam has been autograded\n                let studentExamResult = await this.fetchStudentExamResult(studentUserID, teacherExam.examid);\n                teacherExam.autograded = studentExamResult.autograded;\n                teacherExam.reviewed = studentExamResult.reviewed;\n                teacherExam.studentExamResult = studentExamResult;\n            }\n\n            // Attach exam information to those assigned exams (name, questions)\n            teacherExam.exam = await this.fetchExam(teacherExam.examid);\n        }\n    },\n    methods: {\n        async postAutoGrade(exam) {\n            exam.autograded = true;\n            /* console.log(\"Sending to autograder\", exam); */\n            /* const resp = await this.postToAutograder(20, 'some code here!') */\n            /* //exam.autograded = true; */\n            /* console.log(resp); */\n        },\n        reviewAndSubmitExam(studentExamResult) {\n            const teacherUserID = this.$route.params.userid;\n            this.$router.push(`/teacher/${teacherUserID}/reviewexam/${studentExamResult.id}`);\n        }\n    }\n}\n</script>\n\n<style scoped>\n.exam-item {\n    border: 1px solid black;\n    margin: 5px;\n}\n</style>\n","import { render } from \"./ViewExam.vue?vue&type=template&id=51e0827c&scoped=true\"\nimport script from \"./ViewExam.vue?vue&type=script&lang=js\"\nexport * from \"./ViewExam.vue?vue&type=script&lang=js\"\n\nimport \"./ViewExam.vue?vue&type=style&index=0&id=51e0827c&scoped=true&lang=css\"\n\nimport exportComponent from \"/home/chris/tests/cs490/front-end/node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-51e0827c\"]])\n\nexport default __exports__","<template>\n    <h1>Review Exam</h1>\n    <div v-if=\"loaded\">\n        <h1>{{ exam.name }} (ID: {{ exam.id }})</h1>\n\n        <div :key=\"question.id\" v-for=\"(question, i) in questions\">\n\n            <!-- Question info -->\n            <h3>{{ i + 1 }}) {{ question.title }}</h3>\n            <h5>Points: {{ question.points }}</h5>\n            <p>{{ question.desc }}</p>\n            <p>Examples:</p>\n            <div>\n                <p v-for=\"test in question.tests\">\n                <code>\n                {{ testStr(test, question.functionname) }}\n                </code>\n                </p>\n            </div>\n\n            <!-- Student answer and point selector -->\n            <div class=\"columns-container\">\n                <!-- Students answer -->\n                <div class=\"grades-container\">\n                    <textarea class=\"grade-item\" disabled=\"true\" rows=\"20\" cols=\"60\">{{ studentsAnswer(question.id).code }}</textarea>\n                </div>\n                <!-- Instructors point column table -->\n                <div class=\"grades-container\">\n                    <table>\n                        <tr>\n                            <th colspan=\"2\">Runs?</th>\n                            <td colspan=\"1\">{{ question.runs ? \"Yes\" : \"No\" }}</td>\n                        </tr>\n                        <tr>\n                            <th colspan=\"2\">Correct Name?</th>\n                            <td colspan=\"1\">{{ question.namecorrect ? \"Yes\" : \"No\" }}</td>\n                            <td><input type=\"number\" size=\"4\" :max=\"1\" v-model=\"question.namecorrectpoints\" min=\"0\"></td>\n                        </tr>\n                    </table>\n                    <!-- Test cases and point assignment -->\n                    <table>\n                        <tr>\n                            <th>Expected</th>\n                            <th>Run</th>\n                            <th>Pass?</th>\n                            <th>Points</th>\n                        </tr>\n                        <tr v-for=\"test in question.tests\">\n                            <td>{{ testStr(test, question.functionname) }}</td>\n                            <td>{{ test.studentoutput }}</td>\n                            <td>{{ test.pass ? \"Yes\" : \"No\" }}</td>\n                            <td><input type=\"number\" size=\"4\" :max=\"test.maxpoints\" v-model=\"test.points\" min=\"0\"></td>\n                        </tr>\n                    </table>\n                    <!-- Instructor comment box -->\n                    <div class=\"comment-box\">\n                        <p>Comment:</p>\n                        <textarea v-model=\"question.comment\"></textarea>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n    <button @click=\"onSubmit\">Finalize Grades</button>\n</template>\n\n<script>\nexport default {\n    name: 'ReviewExam',\n    inject: [\n        'zip',\n        'split',\n        'fetchExam',\n        'fetchQuestionsFromExam',\n        'fetchStudentExamResult',\n        'fetchStudentExamResultByID',\n        'fetchStudentExamAnswers',\n        'putStudentExamAnswer',\n        'putStudentExamResult'\n    ],\n    data() {\n        return {\n            teacherUserID: +this.$route.params.userid,\n            studentExamResultID: +this.$route.params.studentexamresultid,\n            studentExamResult: {},\n            studentExamAnswers: [],\n            exam: {},\n            questions: [],\n            loaded: false,\n        };\n    },\n    methods: {\n        async onSubmit() {\n            // Get total points awarded\n            let totalPoints = 0;\n            this.questions.forEach(q => {\n                q.tests.forEach(t => {\n                    totalPoints += t.points;\n                });\n                totalPoints += q.namecorrectpoints;\n            });\n\n            // Update studentexamanswer points amount and the comment\n            for (const q of this.questions) {\n                const studentsAnswer = this.studentsAnswer(q.id);\n                for (const [qTest, sTest] of this.zip(q.tests, studentsAnswer.tests)) {\n                    sTest.points = qTest.points;\n                }\n                studentsAnswer.namecorrectpoints = q.namecorrectpoints;\n                studentsAnswer.comment = q.comment;\n            }\n\n            // Set the total points for studentexamresult and mark it reviewed\n            this.studentExamResult.points = totalPoints;\n            this.studentExamResult.autograded = true; // REMOVEME:\n            this.studentExamResult.reviewed = true;\n\n            // Put the studentexamanswers and studentexamresult\n\n            // Put the studentexamanswers\n            for (const sea of this.studentExamAnswers) {\n                const res = await this.putStudentExamAnswer(sea);\n            }\n\n            // Put the studentexamresult\n            const res = await this.putStudentExamResult(this.studentExamResult);\n\n            // Redirect back to home\n            this.$router.push(`/teacher/${this.userid}/`);\n        },\n        studentsAnswer(qid) {\n            const answer = this.studentExamAnswers.find(\n                a => a.questionid === qid && a.studentexamresultid === this.studentExamResultID\n            );\n            return answer;\n        },\n        testStr(test, fname) {\n            return `${fname}(${test.arguments.join(',')}) -> ${test.output}`;\n        }\n    },\n    async created() {\n        this.studentExamResult = await this.fetchStudentExamResultByID(this.studentExamResultID);\n        this.exam = await this.fetchExam(this.studentExamResult.examid);\n        this.studentExamAnswers = await this.fetchStudentExamAnswers(this.studentExamResultID);\n        this.questions = await this.fetchQuestionsFromExam(this.studentExamResult.examid);\n\n        // Add the points from the students answer and whether\n        // or not they passed to the questions test (for rendering)\n        for (const question of this.questions) {\n            const studentsAnswer = this.studentsAnswer(question.id);\n            for (const [qTest, sTest] of this.zip(question.tests, studentsAnswer.tests)) {\n                qTest.points = sTest.points;\n                qTest.pass = sTest.pass;\n                qTest.studentoutput = sTest.studentoutput;\n            }\n            const testsCount = question.tests.length;\n            const pointDist = this.split(question.points - (question.points === 0 ? 0 : 1), testsCount);\n            for (const [qTest, maxPoints] of this.zip(question.tests, pointDist)) {\n                qTest.maxpoints = maxPoints;\n            }\n            question.runs = studentsAnswer.runs;\n            question.namecorrect = studentsAnswer.namecorrect;\n            question.namecorrectpoints = studentsAnswer.namecorrectpoints;\n            question.comment = studentsAnswer.comment;\n        }\n\n        this.loaded = true;\n    }\n}\n</script>\n\n\n<style scoped>\n    \nbody {\n    margin: 0;\n}\n.column-title {\n    color: white;\n}\n\n.grades-container {\n    background-color: #344;\n    padding: 1rem;\n    margin-top: 1rem;\n    flex: 1;\n}\n\n.grade-item {\n    padding: 1rem;\n    background-color: white;\n    border: 1px solid blue;\n}\n\n.columns-container {\n    display: flex;\n    justify-content: safe center;\n    justify-content: right; /* REMOVE ME */\n    width: 75%;\n    margin: 0 auto;\n    max-width: 1000px;\n}\n\n.comment-box {\n    background-color: white;\n    padding: 10px;\n}\n\ntable {\n    background-color: white;\n    width: 100%;\n    border: 1px solid black;\n}\nth, tr, td {\n    border: 1px solid black;\n}\n</style>\n\n\n","import { render } from \"./ReviewExam.vue?vue&type=template&id=789b25ee&scoped=true\"\nimport script from \"./ReviewExam.vue?vue&type=script&lang=js\"\nexport * from \"./ReviewExam.vue?vue&type=script&lang=js\"\n\nimport \"./ReviewExam.vue?vue&type=style&index=0&id=789b25ee&scoped=true&lang=css\"\n\nimport exportComponent from \"/home/chris/tests/cs490/front-end/node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-789b25ee\"]])\n\nexport default __exports__","<template>\n    <h1>View Graded</h1>\n    <div v-if=\"loaded\">\n        <h1>{{ exam.name }} (ID: {{ exam.id }})</h1>\n        <h1>Score: {{ earnedPoints }}/{{ totalPoints }}</h1>\n\n        <div :key=\"question.id\" v-for=\"(question, i) in questions\">\n\n            <!-- Question info -->\n            <h3>{{ i + 1 }}) {{ question.title }}</h3>\n            <h5>Points: {{ question.points }}</h5>\n            <p>{{ question.desc }}</p>\n            <p>Examples:</p>\n            <div>\n                <p v-for=\"test in question.tests\">\n                <code>\n                {{ testStr(test, question.functionname) }}\n                </code>\n                </p>\n            </div>\n\n            <!-- Student answer and point selector -->\n            <div class=\"columns-container\">\n                <!-- Students answer -->\n                <div class=\"grades-container\">\n                    <textarea class=\"grade-item\" disabled=\"true\" rows=\"20\" cols=\"60\">{{ studentsAnswer(question.id).code }}</textarea>\n                </div>\n                <!-- Instructors point column table -->\n                <div class=\"grades-container\">\n                    <!-- Test cases and point assignment -->\n                    <table>\n                        <tr>\n                            <th colspan=\"2\">Runs?</th>\n                            <th colspan=\"1\">{{ question.runs ? \"Yes\" : \"No\" }}</th>\n                        </tr>\n                        <tr>\n                            <th colspan=\"2\">Correct Name?</th>\n                            <td colspan=\"1\">{{ question.namecorrect ? \"Yes\" : \"No\" }}</td>\n                            <td><input disabled type=\"number\" size=\"4\" :max=\"1\" v-model=\"question.namecorrectpoints\" min=\"0\"></td>\n                        </tr>\n                        <tr>\n                            <th>Expected</th>\n                            <th>Run</th>\n                            <th>Pass?</th>\n                            <th>Points</th>\n                        </tr>\n                        <tr v-for=\"test in question.tests\">\n                            <td>{{ testStr(test, question.functionname) }}</td>\n                            <td>{{ test.studentoutput }}</td>\n                            <td>{{ test.pass ? \"Yes\" : \"No\" }}</td>\n                            <td><input disabled type=\"number\" size=\"4\" :max=\"test.points\" v-model=\"test.points\" min=\"0\"></td>\n                        </tr>\n                    </table>\n                    <!-- Instructor comment box -->\n                    <div class=\"comment-box\">\n                        <p>Comment:</p>\n                        <textarea disabled>{{ question.comment }}</textarea>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n</template>\n\n<script>\nexport default {\n    name: 'ReviewExam',\n    inject: [\n        'zip',\n        'split',\n        'fetchExam',\n        'fetchQuestionsFromExam',\n        'fetchStudentExamResult',\n        'fetchStudentExamResultByID',\n        'fetchStudentExamAnswers',\n    ],\n    data() {\n        return {\n            studentUserID: this.$route.params.userid,\n            studentExamResultID: this.$route.params.studentexamresultid,\n            studentExamResult: {},\n            studentExamAnswers: [],\n            exam: {},\n            questions: [],\n            loaded: false,\n            totalPoints: 0,\n            earnedPoints: 0,\n        };\n    },\n    methods: {\n        studentsAnswer(qid) {\n            const answer = this.studentExamAnswers.find(a => a.questionid === qid);\n            return answer;\n        },\n        testStr(test, fname) {\n            return `${fname}(${test.arguments.join(',')}) -> ${test.output}`;\n        }\n    },\n    async created() {\n        this.studentExamResult = await this.fetchStudentExamResultByID(this.studentExamResultID);\n        this.exam = await this.fetchExam(this.studentExamResult.examid);\n        this.studentExamAnswers = await this.fetchStudentExamAnswers(this.studentExamResultID);\n        this.questions = await this.fetchQuestionsFromExam(this.studentExamResult.examid);\n\n        // Add the points from the students answer and whether\n        // or not they passed to the questions test (for rendering)\n        for (const question of this.questions) {\n            const studentsAnswer = this.studentsAnswer(question.id);\n            for (const [qTest, sTest] of this.zip(question.tests, studentsAnswer.tests)) {\n                qTest.points = sTest.points;\n                qTest.pass = sTest.pass;\n                qTest.studentoutput = sTest.studentoutput;\n            }\n            question.runs = studentsAnswer.runs;\n            question.namecorrect = studentsAnswer.namecorrect;\n            question.namecorrectpoints = studentsAnswer.namecorrectpoints;\n            question.comment = studentsAnswer.comment;\n        }\n\n        // Get total points\n        // Get earned points\n        this.questions.forEach(q => {\n            this.totalPoints += q.points;\n            q.tests.forEach(t => {\n                // Add points earned from each test case\n                this.earnedPoints += t.points;\n            });\n            this.earnedPoints += q.namecorrectpoints;\n        });\n\n        this.loaded = true;\n    }\n}\n</script>\n\n\n<style scoped>\n    \nbody {\n    margin: 0;\n}\n.column-title {\n    color: white;\n}\n\n.grades-container {\n    background-color: #344;\n    padding: 1rem;\n    margin-top: 1rem;\n    flex: 1;\n}\n\n.grade-item {\n    padding: 1rem;\n    background-color: white;\n    border: 1px solid blue;\n}\n\n.columns-container {\n    display: flex;\n    justify-content: safe center;\n    /* justify-content: right; /1* REMOVE ME *1/ */\n    width: 75%;\n    margin: 0 auto;\n    max-width: 1000px;\n}\n\n.comment-box {\n    background-color: white;\n    padding: 10px;\n}\n\ntable {\n    background-color: white;\n    width: 100%;\n    border: 1px solid black;\n}\nth, tr, td {\n    border: 1px solid black;\n}\n</style>\n\n\n","import { render } from \"./ViewGraded.vue?vue&type=template&id=41b5aea0&scoped=true\"\nimport script from \"./ViewGraded.vue?vue&type=script&lang=js\"\nexport * from \"./ViewGraded.vue?vue&type=script&lang=js\"\n\nimport \"./ViewGraded.vue?vue&type=style&index=0&id=41b5aea0&scoped=true&lang=css\"\n\nimport exportComponent from \"/home/chris/tests/cs490/front-end/node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-41b5aea0\"]])\n\nexport default __exports__","import { createRouter, createWebHistory } from 'vue-router';\n\nimport Home from '../views/Home';\nimport NotFound from '../views/NotFound';\nimport TeacherDashboard from '../views/TeacherDashboard';\nimport StudentDashboard from '../views/StudentDashboard';\nimport Exam from '../views/Exam.vue';\nimport ExamList from '../views/ExamList';\nimport AssignExam from '../views/AssignExam';\nimport ExamCreator from '../views/ExamCreator';\nimport QuestionCreator from '../views/QuestionCreator';\nimport ViewExam from '../views/ViewExam';\nimport ReviewExam from '../views/ReviewExam';\nimport ViewGraded from '../views/ViewGraded';\n\nconst routes = [\n    {\n        path: '/',\n        name: 'Home',\n        component: Home,\n    },\n    {\n        path: '/teacher/:userid',\n        name: 'TeacherDashboard',\n        component: TeacherDashboard,\n        children: [\n            {\n                path: 'examcreator',\n                component: ExamCreator\n            },\n            {\n                path: 'questioncreator',\n                component: QuestionCreator\n            },\n            {\n                path: 'assignexam',\n                component: AssignExam\n            },\n            {\n                path: 'viewexams',\n                component: ViewExam,\n            },\n            {\n                path: 'reviewexam/:studentexamresultid',\n                component: ReviewExam\n            }\n        ]\n    },\n    {\n        path: '/student/:userid',\n        name: 'StudentDashboard',\n        component: StudentDashboard,\n        children: [\n            {\n                path: 'exam/:examid',\n                component: Exam\n            },\n            {\n                path: 'examlist',\n                component: ExamList\n            },\n            {\n                path: 'viewgraded/:studentexamresultid',\n                component: ViewGraded\n            }\n        ]\n    },\n    // 404 catch all\n    {\n        path: '/:catchAll(.*)',\n        name: 'NotFound',\n        component: NotFound\n    }\n];\n\nconst router = createRouter({\n    history: createWebHistory(process.env.BASE_URL),\n    routes,\n});\n\nexport default router;\n","// Common functionality for querying the database\nexport default {\n    install: (app, options) => {\n\n        //const database = 'http://localhost:5000';\n        const database = 'http://ec2-3-92-132-35.compute-1.amazonaws.com';\n        const middle = 'http://ec2-3-136-155-192.us-east-2.compute.amazonaws.com';\n\n        const serialize = function(obj) {\n            var str = [];\n            for (var p in obj)\n                if (obj.hasOwnProperty(p)) {\n                    str.push(encodeURIComponent(p) + \"=\" + encodeURIComponent(obj[p]));\n                }\n            return str.join(\"&\");\n        }\n\n        const postToAutograder = async function(qid, code) {\n            const res = await fetch(`${middle}/cringe`, {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/x-www-form-urlencoded'\n                },\n                body: serialize({\n                    qid: qid,\n                    code: code\n                })\n            });\n            const resp = await res.text();\n            return resp;\n        };\n        app.provide('postToAutograder', postToAutograder);\n\n        // Fetch single user table\n        const fetchUser = async function(userID) {\n            const res = await fetch(`${database}/users/${userID}`);\n            const data = await res.json();\n            return data;\n        }\n        // Fetch single exam table by examID\n        const fetchExam = async function(examID) {\n            const res = await fetch(`${database}/exams/${examID}`);\n            const data = await res.json();\n            if (data.length === 0) {\n                console.error(`Couldn't fetch exam data: ID ${id}`);\n                return;\n            }\n            return data;\n        }\n        // Fetch all exams\n        const fetchExams = async function() {\n            const res = await fetch(`${database}/exams`);\n            const data = await res.json();\n            return data;\n        };\n        // Fetch all teacher exams (examID, assignee, assigner)\n        const fetchTeacherExams = async function(userID) {\n            const res = await fetch(`${database}/teacherexams?assignerid=${userID}`);\n            const data = await res.json();\n            return data;\n        };\n        // Fetch all student exams (completed (IDs), incompleted (IDs))\n        const fetchStudentExams = async function(userID) {\n            const res = await fetch(`${database}/studentexams?userid=${userID}`);\n            const data = await res.json();\n            return data[0]; // just want the one result\n        };\n        // Fetch all question tables from question IDs in exam questions\n        const fetchQuestionsFromExam = async function(examID) {\n            const exam = await fetchExam(examID);\n            // Exam doesn't exist or has no questions (??), should throw but just return empty\n            if (!exam.questions) return [];\n            const questions = [];\n            for (const { id, points } of exam.questions) {\n                const question = await fetchQuestion(id);\n                question.points = points;\n                questions.push(question);\n            }\n            return questions;\n        };\n        // Fetch all questions (in bank)\n        const fetchQuestions = async function() {\n            const res = await fetch(`${database}/questions`);\n            const data = await res.json();\n            return data;\n        };\n        // Fetch single question\n        const fetchQuestion = async function(questionID) {\n            const res = await fetch(`${database}/questions/${questionID}`);\n            const data = await res.json();\n            return data;\n        };\n        // Fetch single user login credentials\n        const fetchLoginCredentials = async function(user, pass) {\n            const res = await fetch(`${database}/users?username=${user}&password=${pass}`);\n            const data = await res.json();\n            return data[0]; // just want the one result\n        };\n        // Fetch userID by user name\n        const fetchUserID = async function(user) {\n            const res = await fetch(`${database}/users?username=${user}`);\n            const data = await res.json();\n            return data[0].id; // just want the one result\n        }\n        const fetchStudentExamResult = async function(userID, examID) {\n            const res = await fetch(`${database}/studentexamresult?userid=${userID}&examid=${examID}`);\n            const data = await res.json();\n            return data[0]; // just want the one result\n        }\n        const fetchStudentExamResultByID = async function(ID) {\n            const res = await fetch(`${database}/studentexamresult/${ID}`);\n            const data = await res.json();\n            return data;\n        };\n        const fetchStudentExamAnswers = async function(serID) {\n            const res = await fetch(`${database}/studentexamanswers?$studentexamresultid=${serID}`);\n            const data = await res.json();\n            return data;\n        };\n        app.provide('fetchStudentExamAnswers', fetchStudentExamAnswers);\n\n        const postQuestion = async function(question) {\n            const res = await fetch(`${database}/questions`, {\n                method: 'post',\n                headers: {\n                    'Content-type': 'application/json',\n                },\n                body: JSON.stringify(question)\n            });\n        };\n        app.provide('postQuestion', postQuestion);\n\n        const postExam = async function(exam) {\n            const res = await fetch(`${database}/exams`, {\n                method: 'post',\n                headers: {\n                    'Content-type': 'application/json',\n                },\n                body: JSON.stringify(exam)\n            });\n        };\n        app.provide('postExam', postExam);\n\n        const postTeacherExam = async function(teacherexam) {\n            const res = await fetch(`${database}/teacherexams`, {\n                method: 'post',\n                headers: {\n                    'Content-type': 'application/json',\n                },\n                body: JSON.stringify(teacherexam)\n            });\n        };\n        app.provide('postTeacherExam', postTeacherExam);\n\n        const updateStudentExams = async function(studentexams) {\n            const res = await fetch(`${database}/studentexams/${studentexams.id}`, {\n                method: 'put',\n                headers: {\n                    'Content-type': 'application/json',\n                },\n                body: JSON.stringify(studentexams)\n            });\n        };\n        app.provide('updateStudentExams', updateStudentExams);\n\n        const postStudentExamResult = async function(studentexamresult) {\n            const res = await fetch(`${database}/studentexamresult`, {\n                method: 'post',\n                headers: {\n                    'Content-type': 'application/json',\n                },\n                body: JSON.stringify(studentexamresult)\n            });\n            return res;\n        };\n        app.provide('postStudentExamResult', postStudentExamResult);\n\n\n        const postStudentExamAnswer = async function(sea) {\n            const res = await fetch(`${database}/studentexamanswers`, {\n                method: 'post',\n                headers: {\n                    'Content-type': 'application/json',\n                },\n                body: JSON.stringify(sea)\n            });\n        };\n        app.provide('postStudentExamAnswer', postStudentExamAnswer);\n\n        const putStudentExamResult = async function(ser) {\n            const res = await fetch(`${database}/studentexamresult/${ser.id}`, {\n                method: 'put',\n                headers: {\n                    'Content-Type': 'application/json'\n                },\n                body: JSON.stringify(ser)\n            });\n        };\n        app.provide('putStudentExamResult', putStudentExamResult);\n\n        const putStudentExamAnswer = async function(sea) {\n            const res = await fetch(`${database}/studentexamanswers/${sea.id}`, {\n                method: 'put',\n                headers: {\n                    'Content-Type': 'application/json'\n                },\n                body: JSON.stringify(sea)\n            });\n        };\n        app.provide('putStudentExamAnswer', putStudentExamAnswer);\n\n        app.provide('fetchExam', fetchExam);\n        app.provide('fetchExams', fetchExams);\n\n        app.provide('fetchStudentExams', fetchStudentExams);\n        app.provide('fetchTeacherExams', fetchTeacherExams);\n\n        app.provide('fetchStudentExamResult', fetchStudentExamResult);\n        app.provide('fetchStudentExamResultByID', fetchStudentExamResultByID);\n\n        app.provide('fetchQuestion', fetchQuestion);\n        app.provide('fetchQuestions', fetchQuestions);\n        app.provide('fetchQuestionsFromExam', fetchQuestionsFromExam);\n\n        app.provide('fetchUser', fetchUser);\n        app.provide('fetchUserID', fetchUserID);\n        app.provide('fetchLoginCredentials', fetchLoginCredentials);\n\n        app.provide('serialize', serialize);\n\n        // Divide points into n close-to equal parts\n        const split = function(x, n) {\n            if(x < n)\n                return 0;\n\n            let res = [];\n            if (x % n == 0) {\n                for (let i = 0; i < n; i++)\n                    res.push(x/n);\n            } else {\n                let zp = n - (x % n);\n                let pp = Math.floor(x/n);\n                for(let i = 0; i < n; i++) {\n                    if(i>= zp)\n                        res.push(pp + 1);\n                    else\n                        res.push(pp);\n                }\n            }\n            return res;\n        };\n\n        const zip = function(a, b) {\n            return a.map((e, i) => [e, b[i]]);\n        }\n\n        app.provide('split', split);\n        app.provide('zip', zip);\n    }\n}\n","import { createApp } from 'vue';\nimport App from './App.vue';\nimport router from './router';\nimport database from './database';\n\nconst app = createApp(App);\n\napp.use(router);\napp.use(database);\n\napp.mount('#app');\n\n//createApp(App).use(router).mount('#app')\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","var deferred = [];\n__webpack_require__.O = function(result, chunkIds, fn, priority) {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar chunkIds = deferred[i][0];\n\t\tvar fn = deferred[i][1];\n\t\tvar priority = deferred[i][2];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every(function(key) { return __webpack_require__.O[key](chunkIds[j]); })) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = function(module) {\n\tvar getter = module && module.__esModule ?\n\t\tfunction() { return module['default']; } :\n\t\tfunction() { return module; };\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t143: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = function(chunkId) { return installedChunks[chunkId] === 0; };\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = function(parentChunkLoadingFunction, data) {\n\tvar chunkIds = data[0];\n\tvar moreModules = data[1];\n\tvar runtime = data[2];\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some(function(id) { return installedChunks[id] !== 0; })) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunktest\"] = self[\"webpackChunktest\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [998], function() { return __webpack_require__(9442); })\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"names":["_createVNode","_component_Header","userInfo","$data","onUserLoggedIn","$options","onUserLoggedOut","title","_createElementBlock","_hoisted_1","_component_router_view","_component_Footer","_createElementVNode","onClick","_ctx","push","$props","_component_Login","type","value","style","username","onSubmit","method","$event","name","required","_hoisted_3","_hoisted_5","_hoisted_6","_toDisplayString","_hoisted_8","inject","components","props","Object","emits","data","password","errorMessage","methods","async","e","credientials","preventDefault","this","fetchLoginCredentials","error","$emit","userid","id","onLogout","__exports__","Login","String","onUserLogin","info","onUserLogout","_hoisted_2","_component_router_link","to","computed","userIsLoggedIn","userIsTeacher","toLowerCase","userIsStudent","userDashboard","Header","Footer","examActive","handleUserLogin","$router","handleUserLogout","res","fetch","headers","body","serialize","qid","code","resp","text","console","log","created","render","script","path","$route","params","examCreatorPath","questionCreatorPath","assignExamPath","viewExamsPath","_Fragment","_renderList","question","i","key","points","desc","tests","test","functionname","arguments","join","output","onKeydown","rows","cols","autocapitalize","spellcheck","contenteditable","examID","examid","questions","exam","examFunctionSignature","parameters","studentUserID","payload","autograded","reviewed","totalExamPoints","postStudentExamResult","studentexamresult","json","testsPayload","testsCount","length","pointDist","split","p","zip","pass","studentoutput","questionid","studentexamresultid","runs","namecorrect","namecorrectpoints","comment","postStudentExamAnswer","studentExams","fetchStudentExams","incompleted","indexOf","splice","completed","updateStudentExams","total","tar","target","start","selectionStart","end","selectionEnd","substring","fetchQuestionsFromExam","forEach","q","fetchExam","class","_hoisted_4","_hoisted_7","_hoisted_9","_hoisted_10","_hoisted_11","_hoisted_12","_hoisted_14","student","noexams","emitExamStarted","completedExams","incompletedExams","keys","completedInfo","incompletedInfo","examInfo","studentExamResult","fetchStudentExamResult","color","success","exams","setError","msg","setSuccess","teacherUserID","fetchUserID","assignerid","assigneeid","postTeacherExam","find","fetchExams","onDrop","onDragover","onDragenter","draggable","onDragstart","difficulty","min","bankColumn","examColumn","examName","dragStart","event","dataTransfer","dropEffect","effectAllowed","setData","list","questionID","getData","examQuestions","filter","map","trim","postExam","resetPoints","moveAllToColumn","col","difficultyColor","fetchQuestions","bankList","examList","totalPoints","reduce","c","for","_hoisted_13","pattern","_hoisted_15","param","index","placeholder","_hoisted_17","_hoisted_18","idx","toString","_hoisted_21","_hoisted_22","_hoisted_23","validateForm","postQuestion","duplicates","addParam","removeParam","pop","addTest","removeTest","assignee","disabled","teacherExams","fetchTeacherExams","teacherExam","studentUser","fetchUser","studentCompleted","reviewAndSubmitExam","colspan","size","max","maxpoints","_hoisted_16","studentExamResultID","studentExamAnswers","loaded","t","studentsAnswer","qTest","sTest","sea","putStudentExamAnswer","putStudentExamResult","answer","a","testStr","fname","fetchStudentExamResultByID","fetchStudentExamAnswers","maxPoints","earnedPoints","routes","component","Home","TeacherDashboard","children","ExamCreator","QuestionCreator","AssignExam","ViewExam","ReviewExam","StudentDashboard","Exam","ExamList","ViewGraded","NotFound","router","createRouter","history","createWebHistory","process","install","app","options","database","middle","obj","str","hasOwnProperty","encodeURIComponent","postToAutograder","provide","userID","fetchQuestion","user","ID","serID","JSON","stringify","teacherexam","studentexams","ser","x","n","zp","pp","Math","floor","b","createApp","App","use","mount","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","exports","module","__webpack_modules__","m","deferred","O","result","chunkIds","fn","priority","notFulfilled","Infinity","fulfilled","j","every","r","getter","__esModule","d","definition","o","defineProperty","enumerable","get","g","globalThis","Function","window","prop","prototype","call","installedChunks","chunkId","webpackJsonpCallback","parentChunkLoadingFunction","moreModules","runtime","some","chunkLoadingGlobal","self","bind","__webpack_exports__"],"sourceRoot":""}